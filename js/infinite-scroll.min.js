let _n=2;let _end=!1;let _before=0;let _posts={};let _mobile;const _url=document.URL;const _exec=_url.match('(/search/|/tagged/)|[/|/#]$');if(!_exec)_end=!0;const showNext=()=>{if(!_end){const now=new Date();const delta=now-_before;if(delta>1000){let posts=document.createDocumentFragment();for(i=0;i<_posts.length;i++){posts.appendChild(_posts[i])}
document.getElementById("posts").appendChild(posts);getNext()}else if(_end){$('#load-more').css("display","none");$('#the-end').css("display","flex")}
before=now}}
const getNext=()=>{let url=_url.match('/$')&&_url.slice(0,-1)||_url;url=url.concat("/page/").concat(_n);getAsync(url,(xml)=>{let html=document.createElement('div');html.innerHTML=xml.trim();const posts=html.querySelectorAll(".post")
if(posts.length>0){_n++;_posts=posts;$('#load-more').css("display","flex")}else{$('#load-more').css("display","none");$('#the-end').css("display","flex");_end=!0}})}
const getAsync=(url,callback)=>{let xmlHttp=new XMLHttpRequest();xmlHttp.onreadystatechange=()=>{if(xmlHttp.readyState==4&&xmlHttp.status==200){callback(xmlHttp.responseText)}}
xmlHttp.open("GET",url,!0);xmlHttp.send(null)}
!_end&&getNext();$(function(){const checkDevice=()=>{const scroll=$(document).height()-$(window).height()>0;let windowWidth=$(window).width();if(scroll)windowWidth=windowWidth+17;if(windowWidth>=675){_mobile=!1;$('#load-more').css("display","none")}else{_mobile=!0;if(_exec&&!_end)$('#load-more').css("display","flex")}}
checkDevice();$(window).scroll(()=>{if($(window).scrollTop()>=$(document).height()-$(window).height()&&!_mobile){showNext()}});$(window).resize(()=>{checkDevice()})})